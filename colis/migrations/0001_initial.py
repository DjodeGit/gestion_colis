# Generated by Django 5.2.5 on 2025-09-01 10:29

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Destinataire',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nom_complet', models.CharField(max_length=200, null=True)),
                ('telephone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('ville', models.CharField(max_length=50)),
                ('code_postal', models.CharField(blank=True, max_length=10, null=True)),
                ('qr_code', models.CharField(blank=True, max_length=100, unique=True)),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now)),
                ('adresse', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Destinataire',
                'verbose_name_plural': 'Destinataires',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('expediteur', 'Expéditeur'), ('agent', 'Agent'), ('transporteur', 'Transporteur'), ('admin', 'Administrateur')], default='expediteur', max_length=20)),
                ('telephone', models.CharField(blank=True, max_length=20)),
                ('adresse', models.TextField(blank=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nom_complet', models.CharField(max_length=100)),
                ('telephone', models.CharField(max_length=20)),
                ('zone_operation', models.CharField(max_length=100)),
                ('zone_attribuee', models.CharField(max_length=60)),
                ('email', models.EmailField(max_length=254)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profil_agent', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Agent',
                'verbose_name_plural': 'Agents',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('titre', models.CharField(max_length=200)),
                ('contenu', models.TextField()),
                ('date_publication', models.DateTimeField(default=django.utils.timezone.now)),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Article',
                'verbose_name_plural': 'Articles',
                'ordering': ['-date_publication'],
            },
        ),
        migrations.CreateModel(
            name='DemandeInfos',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254)),
                ('telephone', models.CharField(max_length=30)),
                ('adresse', models.CharField(max_length=255)),
                ('description_colis', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reponse', models.TextField(blank=True, null=True)),
                ('repondu', models.BooleanField(default=False)),
                ('auteur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='demandes_info', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Demande d'informations",
                'verbose_name_plural': "Demandes d'informations",
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Colis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code_suivi', models.CharField(blank=True, max_length=100, unique=True)),
                ('adresse', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('poids', models.FloatField(blank=True, null=True)),
                ('dimensions', models.CharField(blank=True, max_length=50)),
                ('valeur', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('statut', models.CharField(choices=[('enregistre', 'Enregistré'), ('en_transit', 'En transit'), ('en_livraison', 'En livraison'), ('livre', 'Livré'), ('probleme', 'Problème')], default='enregistre', max_length=20)),
                ('date_envoi', models.DateTimeField(auto_now_add=True)),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='colis', to='colis.agent')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='colis_crees', to=settings.AUTH_USER_MODEL)),
                ('destinataire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='colis_recus', to='colis.destinataire')),
            ],
            options={
                'verbose_name': 'Colis',
                'verbose_name_plural': 'Colis',
            },
        ),
        migrations.CreateModel(
            name='EnregistrementScan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('qr_expediteur', models.CharField(max_length=100)),
                ('qr_destinataire', models.CharField(max_length=100)),
                ('type_scan', models.CharField(choices=[('identification', 'Identification'), ('livraison', 'Livraison')], max_length=20)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('resultat', models.CharField(default='Succès', max_length=100)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scans', to='colis.agent')),
                ('colis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scans', to='colis.colis')),
            ],
            options={
                'verbose_name': 'Enregistrement de Scan',
                'verbose_name_plural': 'Enregistrements de Scan',
            },
        ),
        migrations.CreateModel(
            name='Expediteur',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('qr_code', models.CharField(blank=True, max_length=100, unique=True)),
                ('date_inscription', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now)),
                ('nom', models.CharField(max_length=100)),
                ('telephone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('ville', models.CharField(max_length=50)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profil_expediteur', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Expéditeur',
                'verbose_name_plural': 'Expéditeurs',
            },
        ),
        migrations.AddField(
            model_name='colis',
            name='expediteur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='colis_envoyes', to='colis.expediteur'),
        ),
        migrations.CreateModel(
            name='Livraison',
            fields=[
                ('id_livraison', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code_suivi', models.CharField(blank=True, max_length=100, unique=True)),
                ('date_livraison', models.DateField(default=django.utils.timezone.now)),
                ('date_envoi', models.DateField(default=django.utils.timezone.now)),
                ('statut', models.CharField(choices=[('en_attente', 'En attente'), ('en_transit', 'En transit'), ('livre', 'Livré')], default='en_attente', max_length=50)),
                ('colis', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='livraisons', to='colis.colis')),
            ],
            options={
                'verbose_name': 'Livraison',
                'verbose_name_plural': 'Livraisons',
                'ordering': ['-date_envoi'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type_notification', models.CharField(blank=True, choices=[('nouveau_colis', 'Nouveau colis'), ('validation_agent', 'Validation agent'), ('livraison', 'Livraison'), ('autre', 'Autre')], max_length=20, null=True)),
                ('canal', models.CharField(choices=[('IN_APP', 'In-app'), ('EMAIL', 'Email'), ('SMS', 'SMS')], default='IN_APP', max_length=20)),
                ('meta', models.JSONField(blank=True, null=True)),
                ('message', models.CharField(max_length=255)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('lu', models.BooleanField(default=False)),
                ('destinataire', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Transporteur',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('entreprise', models.CharField(blank=True, max_length=100)),
                ('capacite', models.PositiveIntegerField(default=0)),
                ('est_disponible', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profil_transporteur', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tache',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_attribution', models.DateTimeField(auto_now_add=True)),
                ('date_livraison_prevue', models.DateTimeField()),
                ('instructions', models.TextField(blank=True)),
                ('est_terminee', models.BooleanField(default=False)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taches', to='colis.agent')),
                ('colis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taches', to='colis.colis')),
                ('transporteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taches', to='colis.transporteur')),
            ],
        ),
        migrations.AddField(
            model_name='colis',
            name='transporteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='colis', to='colis.transporteur'),
        ),
    ]
